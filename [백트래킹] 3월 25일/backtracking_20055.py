# 백준 20055
# 컨베이어 벨트 위에 로봇

from collections import deque
import sys

input = sys.stdin.readline

n, k = map(int, input().split())
negudo = deque(map(int, input().split()))

count = 1

robot = deque([0]*n)

print(negudo)
print(robot)

while True:
    # 1단계
    negudo.rotate(1)
    robot.rotate(1)
    robot[-1] = 0

    # 2단계
    
    


"""
1번 칸 => 올리는 위치, N번 칸 => 내리는 위치
로봇은 올리는 위치(1번 칸)에만 올릴 수 있고, 내리는 위치(n자리)에 도달하면 즉시 내린다.

로봇을 올리는 위치에 올리거나 로봇이 어떤 칸으로 이동하면 그 칸의 내구도는 1 감소한다.
로봇이 이동하기 위해서는 이동하려는 칸에 로봇이 없으며, 그 칸의 내구도가 1 이상 남아 있어야 한다.

로봇을 건너편으로 옮기려고 한다.
1. 벨트가 각 칸 위에 있는 로봇과 함께 한 칸 회전한다. => 내구도 회전 + 로봇 회전(처음에 올려진 로봇은 없다.)
2. 가장 먼저 벨트에 올라간 로봇부터, 벨트가 회전하는 방향으로 한 칸 이동할 수 있다면 이동한다. 만약 이동할 수 없다면 가만히 있는다.
3. 올리는 위치에 있는 칸의 내구도가 0이 아니면 올리는 위치에 로봇을 올린다.
4. 내구도가 0인 칸의 개수가 k개 이상이라면 과정을 종료한다. 그렇지 않으면 1번으로 돌아간다.


종료되었을 때 몇 번째 단계가 진행 중이었는지 구해라 가장 처음 수행되는 단계는 1번째 단계이다
"""
# deque의 rotate사용하기